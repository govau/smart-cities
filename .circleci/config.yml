# Javascript Node CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

version: 2

jobs:
  build:
    docker:
      - image: circleci/node:8.5.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: rm -rf node_modules
      - run: npm install
      - run: npm rebuild node-sass --force
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm test
  deploy_staging:
    docker:
      - image: circleci/node:8.5.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: ./scripts/prepare_build.sh
      - run: htpasswd -cb build/.htpasswd $BASICAUTH_STAGING_USER $BASICAUTH_STAGING_PASSWORD
      - run: ./scripts/cf_staging.sh
      - run: cf zero-downtime-push smart-cities-staging -f manifest-staging.yml -p build
  deploy_production:
    docker:
      - image: circleci/node:8.5.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: ./scripts/prepare_build.sh
      - run: ./scripts/cf_production.sh
      - run: cf zero-downtime-push smart-cities -f manifest-production.yml -p build
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/ # i.e. always build for all tags & branches
      - deploy_staging:
          requires:
            - build
          filters:
            branches:
              only: /^master$/
      - deploy_production:
          requires:
            - build
          filters:
            branches:
              ignore:
                /.*/
            tags:
              only: /release-.*/
